{"version":3,"sources":["components/Phonebook/Phonebook.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactsList/ContactsList.jsx","components/Section/Section.jsx","components/Phonebook/Phonebook.jsx","components/Filter/Filter.jsx","components/App/App.js","services/LocalStorage.js","index.js"],"names":["module","exports","ContactList","filterContact","deleteContact","map","contact","className","s","item","name","number","button","type","onClick","id","Section","title","children","INITIAL_STATE","Phonebook","state","handleSubmit","e","preventDefault","props","onSubmit","reset","handleChange","target","value","setState","this","form","label","input","pattern","required","onChange","Component","Filter","filter","App","contacts","stateData","checkedName","find","toLowerCase","addContact","newContact","nanoid","alert","prevState","includes","savedContacts","key","JSON","parse","localStorage","getItem","error","get","prevProps","setItem","stringify","save","ContactsList","ReactDom","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.9d4e4880.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Phonebook_label__3LNaa\",\"input\":\"Phonebook_input__jf21G\",\"button\":\"Phonebook_button__3HyLT\",\"form\":\"Phonebook_form__1PrPB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"ContactsList_value__K9dvu\",\"item\":\"ContactsList_item__21DVe\",\"button\":\"ContactsList_button__myKhf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2tOIO\",\"input\":\"Filter_input__3eW5C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__g6P41\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactsList.module.css\";\r\n\r\nconst ContactList = ({ filterContact, deleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {filterContact.map((contact) => {\r\n        return (\r\n          <li key={contact.id} className={s.item}>\r\n            <span>{contact.name}: </span>\r\n            <span>{contact.number}</span>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              onClick={() => deleteContact(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  filterContact: PropTypes.array,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import { Component } from \"react\";\nimport s from \"./Phonebook.module.css\";\n\nconst INITIAL_STATE = { name: \"\", number: \"\" };\n\nclass Phonebook extends Component {\n  state = { ...INITIAL_STATE };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit({ ...this.state });\n    this.reset();\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label className={s.label}>\n          {\" \"}\n          Name\n          <input\n            className={s.input}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={s.label}>\n          {\" \"}\n          Phone\n          <input\n            className={s.input}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Phonebook;\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ handleChange, filter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        value={filter}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ContactsList from \"../ContactsList/ContactsList\";\nimport Section from \"../Section/Section\";\nimport { nanoid } from \"nanoid\";\nimport stateData from './contacts.json';\nimport Phonebook from \"../Phonebook/Phonebook\";\nimport Filter from \"../Filter/Filter\";\nimport { save, get } from '../../services/LocalStorage';\n\n\nclass App extends Component {\n  state = {\n    contacts: stateData,\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const savedContacts = get(\"contacts\");\n    if (savedContacts) {\n      this.setState({contacts: savedContacts});\n    }\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      save(\"contacts\", this.state.contacts);\n    }\n  }\n  \n  checkedName = (name) => {\n   return this.state.contacts.find(\n      (contact) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n  };\n\n  addContact = ({ name, number }) => {\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n\nthis.checkedName(name) ? alert(`${name} is already in contacts!`)\n      : this.setState((prevState) => ({\n          contacts: [...prevState.contacts, newContact],\n        }));\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts].filter((contact) => contact.id !== id),\n      };\n    });\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  filterContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n   return (\n      <div>\n        <Section title=\"Phonebook\">\n          <Phonebook onSubmit={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter handleChange={this.handleChange} filter={this.state.filter} />\n          {\n            <ContactsList\n              filterContact={this.filterContact()}\n              deleteContact={this.deleteContact}\n            />\n          }\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const save = (key, value) => {\r\n    try {\r\n      localStorage.setItem(key, JSON.stringify(value));\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  const get = key => {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(key));\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  const remove = key => {\r\n    try {\r\n      return localStorage.removeItem(key);\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  export { get, save, remove };","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}